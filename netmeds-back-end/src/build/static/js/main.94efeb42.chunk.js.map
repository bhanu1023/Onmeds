{"version":3,"sources":["redux/cart/cart.reducer.jsx","redux/order/order.reducer.jsx","redux/searchedquery/searchedquery.reducer.jsx","redux/user/user.reducer.jsx","redux/root-reducer.js","redux/store.js","component/header/header.component.jsx","redux/searchedquery/searchedquery.action.jsx","layout/publiclayout.component.jsx","layout/protectedlayout.component.jsx","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","cart","addItemToCart","state","action","type","payload","OrderPrice","UpdateOrderPrice","SearchedQuery","User","combineReducers","middleware","logger","store","createStore","rootReducer","applyMiddleware","Header","props","handleSearch","event","setState","search","target","value","user","this","className","to","style","textDecoration","title","name","autoComplete","placeholder","onChange","width","height","viewBox","xmlns","fill","fillRule","d","padding","React","Component","connect","Searched","dispatch","query","Homepage","lazy","Cart","PublicLayout","exact","path","component","Login","ProtectedLayout","App","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94efeb42.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n    cart: []\r\n}\r\n\r\nconst addItemToCart = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CART_ITEM':\r\n            return {\r\n                ...state,\r\n                cart: action.payload //adding new cart item array to cart state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default addItemToCart;","const INITIAL_STATE = {\r\n    OrderPrice: 0\r\n}\r\n\r\nconst UpdateOrderPrice = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_ORDER_PRICE':\r\n            return {\r\n                ...state,\r\n                OrderPrice: action.payload //update order price\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateOrderPrice;","const INITIAL_STATE = {\r\n    SearchedQuery: ''\r\n}\r\n\r\nconst SearchedQuery = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SEARCHED_QUERY':\r\n            return {\r\n                ...state,\r\n                SearchedQuery: action.payload //update searched query\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default SearchedQuery;","const INITIAL_STATE = {\r\n    User: ''\r\n}\r\n\r\nconst User = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_USER':\r\n            return {\r\n                ...state,\r\n                User: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default User;","import { combineReducers } from 'redux';\r\n\r\nimport addItemToCart from './cart/cart.reducer';\r\nimport UpdateOrderPrice from './order/order.reducer';\r\nimport SearchedQuery from './searchedquery/searchedquery.reducer';\r\nimport User from './user/user.reducer';\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    'cart': addItemToCart,\r\n    'OrderPrice': UpdateOrderPrice,\r\n    'SearchedQuery': SearchedQuery,\r\n    'User': User\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middleware = [logger];\r\n\r\n// const store = createStore(rootReducer);\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nexport default store;","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport {SearchedQuery} from '../../redux/searchedquery/searchedquery.action'\r\n\r\nimport \"./header.css\"\r\n\r\n//header component --main header of app\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            search:''\r\n        }\r\n    }\r\n    //update searched text to react store\r\n    handleSearch = (event) =>{\r\n        const {SearchedQuery} = this.props\r\n        this.setState({\r\n            search: event.target.value\r\n        },()=>{\r\n            SearchedQuery(this.state.search)\r\n        })\r\n    }\r\n   render(){\r\n       const {user} = this.props\r\n       return(\r\n        <header className=\"App-header\">\r\n            <div className=\"head-cnt\">\r\n            <div className=\"hd-sd\"></div>\r\n            <div className=\"hd-cnt\">\r\n                <div className=\"logo\">\r\n                <Link to=\"\" style={{ textDecoration: 'none' }}>\r\n                    <div>Onmeds</div>\r\n                </Link>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                <div className=\"src-cnt\">\r\n                    <div className=\"src\">\r\n                    <input type=\"text\" value={this.state.search}  className=\"src-in\" title=\"Search for tests and more\" name=\"q\" autoComplete=\"off\" placeholder=\"Search for tests and more\" onChange={(event)=>this.handleSearch(event)}/>\r\n                    <button className=\"src-btn\" type=\"submit\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 17 18\" className=\"\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#2874F1\" fillRule=\"evenodd\"><path className=\"_2BhAHa\" d=\"m11.618 9.897l4.225 4.212c.092.092.101.232.02.313l-1.465 1.46c-.081.081-.221.072-.314-.02l-4.216-4.203\"></path><path className=\"_2BhAHa\" d=\"m6.486 10.901c-2.42 0-4.381-1.956-4.381-4.368 0-2.413 1.961-4.369 4.381-4.369 2.42 0 4.381 1.956 4.381 4.369 0 2.413-1.961 4.368-4.381 4.368m0-10.835c-3.582 0-6.486 2.895-6.486 6.467 0 3.572 2.904 6.467 6.486 6.467 3.582 0 6.486-2.895 6.486-6.467 0-3.572-2.904-6.467-6.486-6.467\"></path></g></svg></button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"user\">\r\n                <div className=\"usr-cnt\">\r\n                    {\r\n                        user === '' \r\n                        ?\r\n                        <div>Hi Guest,</div>\r\n                        :\r\n                        <div>Hi {user.name},</div>\r\n                    }\r\n                </div>\r\n                </div>\r\n                <div className=\"cart\">\r\n                <Link to=\"/cart\" style={{ textDecoration: 'none' }}>\r\n                    <div className=\"cart-cnt\">\r\n                    <div style={{padding: \"0 10px\"}}>\r\n                    <svg className=\"cart-icon\" width=\"14\" height=\"14\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"><path className=\"_2JpNOH\" d=\"M15.32 2.405H4.887C3 2.405 2.46.805 2.46.805L2.257.21C2.208.085 2.083 0 1.946 0H.336C.1 0-.064.24.024.46l.644 1.945L3.11 9.767c.047.137.175.23.32.23h8.418l-.493 1.958H3.768l.002.003c-.017 0-.033-.003-.05-.003-1.06 0-1.92.86-1.92 1.92s.86 1.92 1.92 1.92c.99 0 1.805-.75 1.91-1.712l5.55.076c.12.922.91 1.636 1.867 1.636 1.04 0 1.885-.844 1.885-1.885 0-.866-.584-1.593-1.38-1.814l2.423-8.832c.12-.433-.206-.86-.655-.86\" fill=\"#fff\"></path></svg>\r\n                    </div>\r\n                    <div className=\"usr-cnt\">\r\n                        Cart\r\n                    </div>\r\n                    </div>\r\n                </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"hd-sd\"></div>\r\n            </div>\r\n        </header>\r\n       )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    SearchedQuery: (query) => dispatch(SearchedQuery(query))\r\n});\r\n  \r\nconst mapStateToProps = state => ({\r\n    Searched: state.SearchedQuery.SearchedQuery,\r\n    user: state.User.User\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Header)","//update searched text to redux store\r\nexport const SearchedQuery = data => ({\r\n    'type': 'SEARCHED_QUERY',\r\n    payload: data\r\n})\r\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\n\r\nimport Header from '../component/header/header.component'\r\nimport { lazy } from \"react\"\r\n\r\n//lazy loading of component for optimization\r\nconst Homepage = lazy(() => import('../pages/homepage/homepage.component'))\r\nconst Cart = lazy(() => import('../pages/cart/cart.component'))\r\n\r\n\r\n//layout with central header -- pages of main layout\r\n\r\nexport const PublicLayout = (props) => <div>\r\n    <Header/>\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Homepage}/>\r\n        <Route exact path='/cart' component={Cart} />\r\n    </Switch>\r\n</div>\r\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\n\r\nimport { lazy } from \"react\"\r\n\r\n//lazy loading of component for optimization\r\nconst Login = lazy(() => import('../pages/login/login.component'))\r\n\r\n//layout without central header -- pages differ from main layout\r\nexport const ProtectedLayout = (props) => <div>\r\n    <Switch>\r\n        <Route exact path='/login' component={Login} />\r\n    </Switch>\r\n</div>\r\n","import React,{ Suspense }  from 'react'\nimport { Route, Switch } from \"react-router-dom\"\nimport {PublicLayout} from \"./layout/publiclayout.component\"\nimport {ProtectedLayout} from \"./layout/protectedlayout.component\"\n\nimport './App.css'\n\nconst renderLoader = () => <p>Loading</p>;// on route loading show some loader\n\n\n//main app\nfunction App() {\n  return (\n    <div className=\"App\">\n        <main className=\"page-wrapper\">\n          <Suspense fallback={renderLoader()}>\n              <Switch>\n                <Route path='/login' component={ProtectedLayout} />\n                <Route path='/' component={PublicLayout} />\n              </Switch>\n          </Suspense>\n        </main>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store.js\";\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}