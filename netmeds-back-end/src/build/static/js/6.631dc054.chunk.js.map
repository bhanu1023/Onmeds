{"version":3,"sources":["apis/service.js","pages/login/login.component.jsx","redux/user/user.action.jsx"],"names":["centralisedAPICall","url","method","data","headers","toUpperCase","Apiurl","axios","withcredentials","CovidTestPackages","Loginapi","myCart","addtoCart","removeCartItem","Login","props","handlelogin","state","username","password","User","trim","then","result","status","console","log","history","push","catch","error","alert","this","className","id","type","placeholder","value","onChange","event","setState","target","onClick","Component","connect","dispatch","item","payload"],"mappings":"6HAAA,+LAUA,SAASA,EAAmBC,EAAKC,GAAkC,IAA1BC,EAAyB,uDAApB,KAAMC,EAAc,uDAAN,KAC1DF,EAASA,EAAOG,cAChB,IAAMC,EANS,OAMuBL,EACtC,OAAOM,IAAM,CACXL,SACAD,IAAKK,EACLE,iBAAiB,EACjBJ,UACAD,SAKG,IAAMM,EAAoB,WAC/B,OAAOT,EAAmB,YAAa,QAI5BU,EAAW,SAACP,EAAKC,GAC5B,OAAOJ,EAAmB,SAAS,OAAOG,EAAKC,IAGpCO,EAAS,WACpB,OAAOX,EAAmB,UAAW,QAG1BY,EAAY,SAACT,GACxB,OAAOH,EAAmB,cAAD,OAAeG,GAAQ,MAAMA,IAG3CU,EAAiB,SAACV,GAC7B,OAAOH,EAAmB,mBAAD,OAAoBG,GAAQ,MAAMA,K,gICjCvDW,G,wDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,YAAY,WAAK,IAAD,EACc,EAAKC,MAA1BC,EADO,EACPA,SAASC,EADF,EACEA,SACPC,EAAQ,EAAKL,MAAbK,KAKP,GAHAF,EAAWA,EAASG,OACpBF,EAAWA,EAASE,OAEJ,KAAbH,GAAgC,KAAbC,EAAtB,CAKA,IAAIhB,EAAO,CACPe,SAAUA,EACVC,SAAUA,GAQdT,YAASP,EANM,CACXC,QAAS,CACP,eAAgB,uCAKrBkB,MAAK,SAAAC,GACiB,MAAhBA,EAAOC,SACNC,QAAQC,IAAIH,GACZH,EAAKG,EAAOpB,MACZ,EAAKY,MAAMY,QAAQC,KAAK,SAG/BC,OAAM,SAAAC,GACHL,QAAQC,IAAII,WAvBZC,MAAM,uCAbV,EAAKd,MAAQ,CACTC,SAAU,GACVC,SAAU,IAJA,E,qDAyCT,IAAD,SACwBa,KAAKf,MAA1BC,EADH,EACGA,SAASC,EADZ,EACYA,SAChB,OACI,yBAAKc,UAAU,cACX,6BACA,yBAAKC,GAAG,gBACJ,wCACA,2BAAOC,KAAK,QAAQC,YAAY,WAAWC,MAAOnB,EAAUoB,SAAU,SAACC,GAAS,EAAKC,SAAS,CAACtB,SAAUqB,EAAME,OAAOJ,WACtH,2BAAOF,KAAK,WAAWC,YAAY,WAAWC,MAAOlB,EAAUmB,SAAU,SAACC,GAAS,EAAKC,SAAS,CAACrB,SAAUoB,EAAME,OAAOJ,WACzH,4BAAQF,KAAK,SAASE,MAAM,QAAQK,QAASV,KAAKhB,aAAlD,WAA+E,6BAC/E,mC,GApDA2B,cAkELC,sBAAQ,MAPI,SAAAC,GAAQ,MAAK,CACpCzB,KAAM,SAAC0B,GAAD,OAAUD,ECnES,CACzB,KAAQ,aACRE,QDiE8BD,QAMnBF,CAAiC9B","file":"static/js/6.631dc054.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n\r\nvar BASE_URL = '';\r\n\r\nconst API_PATH = \"/api\";\r\n\r\n\r\n//central api call of react app\r\nfunction centralisedAPICall(url, method, data=null, headers=null) {\r\n  method = method.toUpperCase();\r\n  const Apiurl =  BASE_URL + API_PATH + url\r\n  return axios({\r\n    method,\r\n    url: Apiurl,\r\n    withcredentials: true,\r\n    headers,\r\n    data\r\n  });\r\n}\r\n\r\n//api to fetch covid test data\r\nexport const CovidTestPackages = () => {\r\n  return centralisedAPICall(\"/products\", \"get\");\r\n}\r\n\r\n//api to logging in user\r\nexport const Loginapi = (data,headers) =>{\r\n  return centralisedAPICall(\"/login\",'post',data,headers)\r\n}\r\n//api to fetch logged in user cart\r\nexport const myCart = () => {\r\n  return centralisedAPICall(\"/mycart\", \"get\");\r\n}\r\n//add products to cart\r\nexport const addtoCart = (data) => {\r\n  return centralisedAPICall(`/addtocart?${data}`, \"get\",data);\r\n}\r\n//remove products from cart\r\nexport const removeCartItem = (data) => {\r\n  return centralisedAPICall(`/removeCartItem?${data}`, \"get\",data);\r\n}\r\n","import React,{Component} from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {User} from '../../redux/user/user.action'\r\n\r\nimport {Loginapi} from '../../apis/service'\r\nimport \"./login.css\"\r\n\r\n//login component for login page\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n    handlelogin=()=>{\r\n        let {username,password} = this.state\r\n        const {User} = this.props\r\n\r\n        username = username.trim()\r\n        password = password.trim()\r\n\r\n        if(username === '' || password === ''){\r\n            alert('username or password are mandatory')\r\n            return\r\n        }\r\n        \r\n        let data = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n        //loggin in user\r\n        Loginapi(data,config)\r\n        .then(result=>{\r\n            if(result.status===200){\r\n                console.log(result)\r\n                User(result.data)\r\n                this.props.history.push(\"/\") //redirect to homepage after login\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    render(){\r\n        const {username,password} = this.state\r\n        return(\r\n            <div className=\"login-page\">\r\n                <br></br>\r\n                <div id=\"login-signup\">\r\n                    <h2> Sign In</h2>\r\n                    <input type=\"email\" placeholder=\"Username\" value={username} onChange={(event)=>{this.setState({username: event.target.value})}} />\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(event)=>{this.setState({password: event.target.value})}} />\r\n                    <button type=\"submit\" value=\"login\" onClick={this.handlelogin}>Sign In</button><br></br>\r\n                    <br></br>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    User: (item) => dispatch(User(item))\r\n});\r\n  \r\n\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(Login)","//storing user data to react store\r\nexport const User = data => ({\r\n    'type': 'LOGIN_USER',\r\n    payload: data\r\n})\r\n"],"sourceRoot":""}